@using Newtonsoft.Json;
@{
    List<Accion> objAccion = null;
    String jsonAccionPagina = null;
    String jsonReglasNegocio = null;
    string Strurl = Request.RawUrl;
    bool urlDefault = Strurl.Contains("Default.cshtml");
    // Comienza petición de acciones para la pagina
    var int_Robot = VariableGlobal.SessionIntBRobot;
    var objAccesoPagina = new PaginaMenuController().Get((int_Robot == 1 ? 2 : 1), Strurl);

    //verificamos si trae parametro para ser Popup o ventana
    bool popUp = bool.Parse(Request.QueryString["Popup"]?.ToString() ?? "false");
    if (!popUp)
    {
        Layout = "~/_SiteLayout.cshtml";
        jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
        jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
        objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");
    }
    else
    {
        //So el usuario no es robot, no tiene acceso a la pagina y la pagina no es default
        if (VariableGlobal.SessionIntBRobot != 1 && objAccesoPagina.Content.IntIdPagina == 0 && !urlDefault)
        {
            Response.Redirect("~/Views/Aplicacion/Acceso/SinAcceso.cshtml?Popup=1");
        }
        else
        {
            // Comienza petición de acciones para la pagina
            jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
            jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
            objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");
        }
    }

    Page.Title = "Usuario";
    int IntPermisoExportar = 0;

    var BtnAccionExportar = objAccion.Where(x => x.StrCveAccion == "Exportar").ToList();

    if (BtnAccionExportar.Count != 0)
    {
        IntPermisoExportar = 1;
    }

    var ddl_Empresas = new EmpresaController().ObtenerLista(3, 0);
}




<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-lg-12">
            <h2 class="text-center" id="lbl_TituloPagina">Usuario</h2>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12  text-center">
            <form role="form" id="form_Cliente" action="intercambioLista.cfm" method="post" class="form-inline">
                <!--
                <div class="form-group m-r-sm">
                    <label for="ddl_Tipo">Tipo:</label>
                    <select id="ddl_Tipo" name="ddl_Tipo" class="form-control">
                        <option value="ALASA">-PENDIENTE-</option>
                    </select>
                </div>-->
                <div class="form-group m-r-sm">
                    <label for="it_Cliente">Clave/Nombre</label>
                    <input type="text" name="it_ClienteFiltro" value="" id="it_ClienteFiltro" class="form-control" />
                </div>
                <!-- <div class="form-group m-r-sm">
                                <label for="ddl_Bloqueado">Bloqueado:</label>
                                <select id="ddl_Bloqueado" name="ddl_Bloqueado" class="form-control">
                                    <option value="ALASA">-PENDIENTE-</option>
                                </select>
                            </div>

                <div class="form-group m-r-sm">
                    <label for="ddl_OrdenarPor">Ordenar por:</label>
                    <select id="ddl_OrdenarPor" name="ddl_OrdenarPor" class="form-control">
                        <option value="ALASA">Cliente</option>
                    </select>
                </div>-->
                <div class="form-group m-r-sm">
                    <label for="ddl_Activo">Empresa:</label>
                    @Html.DropDownList("ddl_Empresa",
                                       "- SELECCIONE -",
                                       ddl_Empresas.Select(x => new SelectListItem() { Value = x.idEmpresa.ToString(), Text = x.cveEmpresa.ToString() + " - " + x.descEmpresa.ToString() }),
                                       0,
                                       new { @class = "form-control required" })
                </div>
                <div class="form-group m-r-sm">
                    <label for="ddl_Activo">Activo:</label>
                    <select id="ddl_Activo" name="ddl_Activo" class="form-control">
                        <option value="0">-TODOS-</option>
                        <option value="1" selected>SI</option>
                        <option value="2">NO</option>
                    </select>
                </div>
                <button id="btn_Buscar" class="btn btn-warning" type="button" title="Buscar"><i class="fa fa-search"></i></button>
                <button id="btn_Nuevo" class="btn btn-warning" type="button" title="Nuevo"><i class="fa fa-file-o"></i></button>
            </form>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox contenido-inicial">
        <div class="ibox-content scroll">
            <table id="tbl_Lista" class="table table-striped table-bordered table-hover"></table>
        </div>
    </div>
</div>

<script type="text/javascript">

    //declaramos variables globales
    var obj_DataTable;
    var int_Robot = @VariableGlobal.SessionIntBRobot;
    var bool_usuario;
    var int_PermisoExportar = @IntPermisoExportar;

    if (int_Robot == 1) bool_usuario = true;
    else bool_usuario = false;

    $(document).ready(function () {
        //$("html").loading("stop");

        //$('#lbltitulopagina').text("Estacion de Servicio")
        //evento a formulario para nueva Estacion de Servicio
        $('#btn_Nuevo').click(function () {
                            fn_nuevo();
                        });

        //evento click opciones -> eliminar
        $('body').on('click', '.btn_Eliminar', function () {

                            var int_id = $(this).closest("tr").find("td:first").text();
                            fn_Eliminar(int_id)
        });

        $("#btn_Buscar").click(function () {
            fn_ReCargarDataTable();
        });

        //obj_dataTable = new class_datatable();
        fn_CargarDataTable();

        if (int_PermisoExportar == 0) {

            if ($(".buttons-excel").length > 0) {
                $(".buttons-excel").remove();
            }

            if ($(".buttons-csv").length > 0) {
                $(".buttons-csv").remove();
            }

            if ($(".buttons-pdf").length > 0) {
                $(".buttons-pdf").remove();
            }

            if ($(".buttons-copy").length > 0) {
                $(".buttons-copy").remove();
            }
        }

    });

                    // Funcion para cargar los datos del datatable
                    function fn_ReCargarDataTable() {
                        obj_DataTable.ajax.reload();

                    }

                    function fn_nuevo() {

                        location.href = 'usuarioAbc.cshtml?PopUp=0'
                    }

                    // Funcion para cargar los datos del datatable
                    function fn_CargarDataTable() {

                        //html en la opcion de los botoes de cada fila
                        var str_Opciones = '<div class="btn-group">' +
                            '<button data-toggle="dropdown" class="btn btn-warning dropdown-toggle">Acciones <span class="caret"></span></button>' +
                            '<ul class="dropdown-menu">' +
                            '<li><a href="#" class="btn_Eliminar">Eliminar</a></li>' +
                            '</ul>' +
                            '</div>';


                        obj_DataTable = $("#tbl_Lista").DataTable({
                            "language": obj_ClaseDataTable.json_LanguageDatatable,
            "fnServerParams": function (oData) {//aqui van los parametros para el filtrado
                        oData.StrUsuario = $("#it_ClienteFiltro").val(),
                oData.IntActivo = $("#ddl_Activo").val(),
                oData.IntEmresa = $("#ddl_Empresa").val()
            },
            "ajax": {//llamamos el metodo datatbale
                        url: "@VariableGlobal.StrUrlApi/UsuarioListado/ObtenerListado/0",
                type: "POST"
            },

            "columns": [//columnas a mostrar en el datatble
                {
                    "data": "IntIdUsuario",
                    /*"render": function (data, type, row, meta) {
                        var str_urledit = "clienteAbc.cshtml?Popup=0&IntIdCliente=" + data;
                        return '<a href="' + str_urledit + '">' + data + '</a>';
                    },*/
                    "title": "Id"
                },
                {
                    "data": "StrCveUsuario",
                    "render": function (data, type, row, meta) {
            var str_urledit = "usuarioAbc.cshtml?Popup=0&IdUsuario=" + row.IntIdUsuario;
            return '<a href="' + str_urledit + '">' + data + '</a>';
        },
                    "title": "Clave"
                },
                {
                    "data": "StrDescUsuario",
                    "title": "Nombre"
                },
                {
                    "data": "StrContrasena",
                    "title": "contraseña",
                    "visible": bool_usuario
                    },
                {
                    "data": "DtFechaVigenciaContrasena",
                    "render": function (data, tyoe, row, meta) {
        //(obj_Datos.DtFecahAlta == '1900-01-01T00:00:00') ? '' : obj_ClaseGlobal.fn_ConvertirFecha(obj_Datos.DtFecahAlta, 1, 2)
        var fecha = obj_ClaseGlobal.fn_ValidarFechaNula(data, 1, 2);
        return fecha;
    },
                    "title": "Vigencia Contrasena"
                },
                {
                    "data": "StrEmail",
                    "title": "Email"
                },
                {
                    "data": "StrEmpresasUsuario",
                    "title": "Empresas Asociadas"
                },
                 {
                    "data": "StrTerminalesUsuario",
                    "title": "Terminales Asociadas"
                },
                  {
                    "data": "StrPerfilesUsuario",
                    "title": "Perfiles"
                },
                {
                    "data": "IntBActivo",
                    "render": function (data, type, row, meta) {
        if (data == 1) return "Sí";
        else return "No";
    },
                    "title": "Activo"
                }
            ],
            "processing": true,//mensaje loadgin de procesamiento en llamada al servidor
            "serverSide": true,//esto quiere decir que se va aconsumir desde el servidor,
            @{
                 if(BtnAccionExportar.Count > 0) {
                    <TEXT>
                            buttons: obj_ClaseDataTable.fn_CargaBotones(true),//cargamos los botones que descargan al cliente la informacion, excel, pdf, imagen
                            dom: '<"html5buttons"B>lrftip',
                    </TEXT>
                }
            }
            pageLength: obj_ClaseDataTable.intLongitudPagina,//logitud por defaul
            "lengthMenu": obj_ClaseDataTable.array_Paginado,
            /*"columnDefs": [//se define la botonera de opciones del lado derecho de la tabla,
                { "bVisible": true, "aTargets": [0, 1, 2, 3, 4] }, // <-- Muestra las columnas seleccionas empezando desde 0, en este caso solo mostrara las primeras 5 columnas
                { "bVisible": false, "aTargets": ['_all'] },        // <-- Oculta todas las demás columnas
                {
                    "title": "Opciones","responsivePriority": 1,
                    "width": "120px",
                    "className": "dt-center",
                    "orderable": false,//quita la opcion de ordenamiento de la columna
                    "bVisible": true,   // <-- Columna visible
                    "targets": 4,      // <-- Con el -1 Cuenta las columnas empezando desde el lado derecho
                    "data": null,       // <-- Datos dinámicos de la columna. En este caso se llena con un html en defaultContent
                    "defaultContent": str_Opciones, // <-- Contenido de la nueva columna
                }
            ],*/
            "searching": false,
            //"scrollX": "100%",
            "initComplete": function (settings, json) {//metodo para que el header flote al momento de scrollear asi abajo
        obj_ClaseGlobal.fn_AgregarMargenEncabezado(obj_DataTable)
            },
            "responsive": true
        });
    }


        //funcion que se llama al momento de dar click en el boton de eliminar
    function fn_Eliminar(par_int_id) {

        swal({//metodo para el mensage de confirm
            title: "Borrar Cliente",
            text: "Desea borrar el Cliente con ID " + par_int_id +"?",
            type: "warning",//tipo de mensage =>  opciones: warning, error, info y success
            showCancelButton: true,//mostrar boton de cancelacion
            confirmButtonColor: hex_str_ColorBotonConfirmar,//color de boton de confirmacion
            confirmButtonText: "Sí!",//texto en el boton de confirmacion
            cancelButtonText: "No!",//texto en el boton de cancelacion
            closeOnConfirm: true,//la ventana de cerrara al momento de seleccionar la opcion de confirmacion
            closeOnCancel: true,//la ventana de cerrara al momento de seleccionar la opcion de cancelacion
        },
        function (isConfirm) {
            if (isConfirm) {//si el usuario confirma eliminar
                $.ajax({
                    url: "@VariableGlobal.StrUrlApi/Cliente/" + par_int_id//se llama la metodo delete de ApiController
                    , type: "DELETE"
                    , contentType: "application/json; charset=utf-8"
                    , dataType: "json"
                    , success: function (obj_Datos) {

                        toastr[obj_Datos["StrTipoError"]](obj_Datos["StrMensajeError"]);//mostramos la respuesta del ajax

                        var indexPage = obj_DataTable.page();//obtenemos la pagina que se encuentra el datatable

                        obj_DataTable.ajax.reload();//se recarga el objeto datatable con los datos actualizados
                        obj_DataTable.page(indexPage).draw("page");//se mantiene en la pagina que estava

                    }
                });
            }
        });

    }

</script>
