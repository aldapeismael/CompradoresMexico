@using Newtonsoft.Json;
@{

    Page.Title = "Registro de Errores";

    var ddl_TipoError = new MultiListaController().ObtenerLista(1, 0, "TIPOERROR");
    var ddl_Severidad = new MultiListaController().ObtenerLista(1, 0, "SEVERIDADERROR");
    var ddl_Empresa = new EmpresaController().ObtenerLista(1, 0);

    ///////////////////////////////////////////////
    //Codigo para reglas de negocio
    ///////////////////////////////////////////////
    string Strurl = Request.RawUrl;
    bool urlDefault = Strurl.Contains("Default.cshtml");
    List<Accion> objAccion = null;
    String jsonAccionPagina = null;
    String jsonReglasNegocio = null;
    var int_Robot = VariableGlobal.SessionIntBRobot;

    // Comienza petición de acciones para la pagina
    var objAccesoPagina = new PaginaMenuController().Get((int_Robot == 1 ? 2 : 1), Strurl);


    //verificamos si trae parametro para ser Popup o ventana
    bool popUp = bool.Parse(Request.QueryString["Popup"]?.ToString() ?? "false");
    if (!popUp)
    {
        Layout = "~/_SiteLayout.cshtml";
        // Comienza petición de acciones para la pagina
        jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
        jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
        objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");

    }
    else
    {
        //So el usuario no es robot, no tiene acceso a la pagina y la pagina no es default
        if (VariableGlobal.SessionIntBRobot != 1 && objAccesoPagina.Content.IntIdPagina == 0 && !urlDefault)
        {
            Response.Redirect("~/Views/Aplicacion/Acceso/SinAcceso.cshtml?Popup=1");
        }
        else
        {
            // Comienza petición de acciones para la pagina
            jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
            jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
            objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");
        }

    }

    ///////////////////////////////////////////////
    //Fin Codigo para reglas de negocio
    ///////////////////////////////////////////////

    //Permiso para exportar datos de DataGrid
    var BtnAccionExportar = objAccion.Where(x => x.StrCveAccion == "Exportar").ToList();
}

<script src="@VariableGlobal.StrUrlSitio/Scripts/plugins/moment/moment.min.js"></script>
<!--- BUSCADOR POR FECHA FIXED -->
<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-lg-12">
            <h2 class="text-center" id="lbl_TituloPagina">Registro de Errores</h2>
        </div>
        <div class="col-lg-12 text-center">
            <form role="form" id="form_FacturaConcepto" action="" method="post" class="form-inline">
                <div class="form-group m-r-sm">
                    <label for="it_IdRegistroError">Id:</label>
                    <input type="text" name="it_IdRegistroError" id="it_IdRegistroError" value="" class="form-control required touchspin" maxlength="10" data-min="0" data-max="1000000000" data-step="1" data-dec="0" />
                </div>
                <div class="form-group m-r-sm">
                    <label for="ddl_Severidad">Empresa:</label>
                    @Html.DropDownList("ddl_Empresa", "-TODOS-", ddl_Empresa.Select(x => new SelectListItem() { Value = x.idEmpresa.ToString(), Text = x.cveEmpresa.ToString() }), 0, new { @class = "form-control required" })
                </div>
                <div class="form-group m-r-sm">
                    <label for="ddl_Severidad">Severidad:</label>
                    @Html.DropDownList("ddl_Severidad", "-TODOS-", ddl_Severidad.Select(x => new SelectListItem() { Value = x.idMultiLista.ToString(), Text = x.descMultiLista.ToString() }), 0, new { @class = "form-control required" })
                </div>
                <div class="form-group m-r-sm">
                    <label for="ddl_TipoError">Tipo:</label>
                    @Html.DropDownList("ddl_TipoError", "-TODOS-", ddl_TipoError.Select(x => new SelectListItem() { Value = x.idMultiLista.ToString(), Text = x.descMultiLista.ToString() }), 0, new { @class = "form-control required" })
                </div>
                <div class="form-group m-r-sm" id="div_FechaRegistro">
                    <label for="it_FechasRegistro">Fecha De:</label>
                    <div class="input-daterange input-group" id="datepicker">
                        <input type="text" id="it_FechaInicio" class="input-sm form-control datepicker" name="start" value="@DateTime.Now.AddDays(-1).ToString("dd/MM/yyyy")" readonly data-date-end-date="@DateTime.Now.ToString("dd/MM/yyyy")">
                        <span class="input-group-addon">A:</span>
                        <input type="text" id="it_FechaFin" class="input-sm form-control datepicker" name="end" value="@DateTime.Now.ToString("dd/MM/yyyy")" readonly data-date-end-date="@DateTime.Now.ToString("dd/MM/yyyy")">
                    </div>
                </div>
                <div class="form-group m-r-sm">
                    <label for="it_ModeloFiltro">Modelo:</label>
                    <input type="text" name="it_ModeloFiltro" id="it_ModeloFiltro" value="" class="form-control required" maxlength="50" />
                </div>
                <button id="btn_Buscar" class="btn btn-warning" type="button" onclick="" title="Ver"><i class="fa fa-search"></i></button>
            </form>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox contenido-inicial">
        <div class="ibox-content scroll" style="overflow: auto; height:600px;">
            <table id="tbl_Lista" class="table table-striped table-bordered table-hover"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
    var obj_DataTable;
    $(document).ready(function () {
        obj_touchSpin = new class_touchspin();
        obj_touchSpin.fn_CargaInputs();
        $('#btn_Buscar').click(function () {
            fn_Buscar();
        });
        $('#div_FechaRegistro .input-daterange').datepicker({
            language: 'es',
            weekStart: 1,
            todayBtn: "linked",
            keyboardNavigation: false,
            //forceParse: false,
            //calendarWeeks: true,
            autoclose: true,
            //linked: true,
            todayHighlight: true
        });

        fn_CargaTabla();
    });

    function fn_Buscar() {
        obj_DataTable.ajax.reload();
    }

    function fn_CargaTabla() {

        //console.log($("#it_FechaInicio").val());
        obj_DataTable = $("#tbl_Lista").DataTable({//inicializamos el datatable
            aaSorting: [[0, 'desc']],
            "language": obj_ClaseDataTable.json_LanguageDataTable,//cargamos la configuracion del lenguaje, configurado en utileria.js
            "fnServerParams": function (oData) {
                oData.IntIdRegistroError = $("#it_IdRegistroError").val();
                oData.IntIdEmpresa = $("#ddl_Empresa option:selected").val();
                oData.IntIdSeveridad = $("#ddl_Severidad option:selected").val();
                oData.IntIdTipoError = $("#ddl_TipoError option:selected").val();
                oData.DateFechaInicio = obj_ClaseGlobal.fn_ConvertirFecha($("#it_FechaInicio").val(), 2, 1);
                oData.DateFechaFin = obj_ClaseGlobal.fn_ConvertirFecha($("#it_FechaFin").val(), 2, 1);
                oData.StrModelo = $("#it_ModeloFiltro").val();
            },
            "ajax": {//llamamos el metodo datatbale
                url: "@VariableGlobal.StrUrlApi/RegistroErrorListado/",
                type:"POST"
            },
            //"lengthMenu": obj_ClaseDataTable.array_Paginado,
            "columns": [//columnas a mostrar en el datatble
                {
                    "data": "IntIdRegistroError",
                    "title": "Id"
                },
                {
                    "data": "ObjUsuario.StrDescUsuario",
                    "title": "Usuario"
                },
                {
                    "data": "ObjEmpresa.StrCveEmpresa",
                    "title": "Empresa"
                },
                {
                    "data": "ObjMultiLista_Severidad.StrDescMultiLista",
                    "title": "Severidad"
                },
                {
                    "data": "ObjMultiLista_TipoError.StrDescMultiLista",
                    "title": "Tipo"
                },
                {
                    "data": "StrErrorMensaje",
                    "title": "Mensaje"
                },
                {
                    "data": "StrErrorVista",
                    "title": "Mensaje vista"
                },
                {
                    "data": "DateFechaInicio",
                    "render": function (data, type, row, meta) {
                        var str_FechaInicio = moment(row.DateFechaInicio).format('DD/MM/YYYY HH:mm:ss');
                        return str_FechaInicio;

                    },
                    "title": "Fecha Inicio"
                },
                {
                    "data": "DateFechaFin",
                    "render": function (data, type, row, meta) {
                        var str_FechaFin = moment(row.DateFechaFin).format('DD/MM/YYYY HH:mm:ss');
                        return str_FechaFin;

                    },
                    "title": "Fecha Fin"
                },
                {
                    "data": "IntErrorCodigo",
                    "title": "Codigo Error"
                },
                {
                    "data": "IntErrorLinea",
                    "title": "Linea"
                },
                {
                    "data": "StrDescStoredProcedure",
                    "title": "Procedure"
                },
                {
                    "data": "StrDescStoredProcedureParametro",
                    "title": "Parametros",
                    "render": function (data, type, row, meta) {
                        return "<textarea class='form-control'>" + data+"</textarea>"
                    }
                },
                {
                    "data": "StrDescNavegador",
                    "title": "Navegador"
                },
                {
                    "data": "StrIP",
                    "title": "IP"
                },
                {
                    "data": "StrVista",
                    "title": "Vista"
                },
                {
                    "data": "StrDescControlador",
                    "title": "Controlador"
                },
                {
                    "data": "StrDescModelo",
                    "title": "Modelo"
                },
                {
                    "data": "StrDescModeloMetodo",
                    "title": "Metodo"
                },
                {
                    "data": "IntBActivo",
                    "title": "Activo",
                    "render": function (data, type, row, meta) {
                        if (data == 1) return "Sí";
                        else return "No";
                    }
                }
            ],
            "processing": true,//mensaje loadgin de procesamiento en llamada al servidor
            "serverSide": true,//esto quiere decir que se va aconsumir desde el servidor,
            @{
                 if(BtnAccionExportar.Count > 0) {
                    <TEXT>
                        buttons: obj_ClaseDataTable.fn_CargaBotones(true),//cargamos los botones que descargan al cliente la informacion, excel, pdf, imagen
                        dom: '<"html5buttons"B>lrftip',
                    </TEXT>
                }
            }
            pageLength: obj_ClaseDataTable.intLongitudPagina,//logitud por defaul
            "lengthMenu": obj_ClaseDataTable.array_Paginado,
            /*"columnDefs": [//se define la botonera de opciones del lado derecho de la tabla,
                { "bVisible": true, "aTargets": [0,1,2,3,4,5,6,7,8,9,10,11,12,13,14] }, // <-- Muestra las columnas seleccionas empezando desde 0, en este caso solo mostrara las primeras 5 columnas
                { "bVisible": false, "aTargets": ['_all'] },        // <-- Oculta todas las demás columnas
                {
                    "title": "Opciones","responsivePriority": 1,
                    "width": "120px",
                    "className": "dt-center",
                    "orderable": false,//quita la opcion de ordenamiento de la columna
                    "bVisible": true,   // <-- Columna visible
                    "targets": 14,      // <-- Con el -1 Cuenta las columnas empezando desde el lado derecho
                    "data": null,       // <-- Datos dinámicos de la columna. En este caso se llena con un html en defaultContent
                    "defaultContent": str_Opciones, // <-- Contenido de la nueva columna
                }
            ],*/
            "searching": false,
            //"initComplete": function (settings, json) {//metodo para que el header flote al momento de scrollear asi abajo
            //    obj_ClaseGlobal.fn_AgregarMargenEncabezado(obj_DataTable);
            //},
            //"responsive": true
        });
    }
</script>
