@{
    Page.Title = "Inicio";

    Layout = "~/_SiteLayout.cshtml";

    string pStrTipoUsuarioCadena = Encriptado.EncriptarDatos("pIdTipoUsuario");
    string pStrIdTipoUsuarioEncriptado = "0";
    pStrIdTipoUsuarioEncriptado = Request.QueryString[pStrTipoUsuarioCadena]?.ToString() ?? "0";
    int pIntIdUsuario = VariableGlobal.SessionIntTipoUsuario;
    if (pStrIdTipoUsuarioEncriptado != "0")
    {
        pIntIdUsuario = int.Parse(Encriptado.DesencriptarDatos(pStrIdTipoUsuarioEncriptado));
        HttpContext.Current.Session["IntTipoUsuario"] = pIntIdUsuario;
    }

    ObjetoBusqueda objetoBusqueda = new ObjetoBusqueda();
    objetoBusqueda.IntEjecuta = 1;
    var lstObjPublicacion = new Publicacion().ObtenerListaGenerica(objetoBusqueda);

}
@functions {
    public string ObtenerTiempoHace(DateTime paramFecha)
    {
        const int SECOND = 1;
        const int MINUTE = 60 * SECOND;
        const int HOUR = 60 * MINUTE;
        const int DAY = 24 * HOUR;
        const int MONTH = 30 * DAY;

        var ts = new TimeSpan(DateTime.UtcNow.Ticks - paramFecha.Ticks);
        double delta = Math.Abs(ts.TotalSeconds);

        if (delta < 1 * MINUTE)
            return ts.Seconds == 1 ? "Hace un segundo" : "Hace " + ts.Seconds + " segundos";

        if (delta < 2 * MINUTE)
            return "Hace un minuto";

        if (delta < 45 * MINUTE)
            return "Hace " + ts.Minutes + " minutos";

        if (delta < 90 * MINUTE)
            return "Hace una hora";

        if (delta < 24 * HOUR)
            return "Hace " + ts.Hours + " horas";

        if (delta < 48 * HOUR)
            return "Ayer";

        if (delta < 30 * DAY)
            return "Hace " + ts.Days + " días";

        if (delta < 12 * MONTH)
        {
            int months = Convert.ToInt32(Math.Floor((double)ts.Days / 30));
            return months <= 1 ? "Hace un mes" : "Hace " + months + " meses";
        }
        else
        {
            int years = Convert.ToInt32(Math.Floor((double)ts.Days / 365));
            return years <= 1 ? "Hace un año" : "hace" + years + " años";
        }

    }

}
<style>
    #page-wrapper {
        padding: 0;
    }
</style>
<br />
<br />
<br />
<section style="height:100%;">
    @foreach (var objPublicacion in lstObjPublicacion)
    {
        <text>
            <div class="container post">
                <div class="row header">
                    <div class="col-2">
                        <img class="rounded-circle" src="@VariableGlobal.StrUrlSitio/img/dummy.jpg" alt="">
                    </div>
                    <div class="col-10">
                        <p class="title">@objPublicacion.StrCveComprador</p>
                        <p class="subTitle">@ObtenerTiempoHace(objPublicacion.DtFechaAlta)</p>
                    </div>
                </div>
                <div class="row post-img">
                    <img class="rounded mx-auto" src="@VariableGlobal.StrUrlSitio/img/imgdumy.png" alt="">
                </div>
                <div class="row body">
                    <div class="col-9">
                        <p style="cursor:pointer" class="productName"><a href="@VariableGlobal.StrUrlSitio/Views/Publicacion/publicacionDetalle.cshtml?idPublicacion=@objPublicacion.IntIdPublicacion">@objPublicacion.StrDescCategoria</a></p>
                        <p class="productDesc">@objPublicacion.StrDescripcion</p>
                    </div>
                    <div class="col-2">
                        <p class="productName">@objPublicacion.DecPresupuesto.ToString("###,###.##")</p>
                    </div>
                </div>
                <div class="row footer">
                    <div class="col">
                        <a href="#"><i class="material-icons md-48">chat_bubble_outline</i></a>
                        <a href="#" id="btn_Favorito" data-idpublicacion="@objPublicacion.IntIdPublicacion"><i class="material-icons md-36">favorite_border</i></a>
                        <a href="#"><i class="material-icons md-36">turned_in_not</i></a>
                    </div>
                </div>
            </div>
        </text>
    }
    <br />
    <br />
</section>

<script>

    $(document).ready(function () {
        // global vars
        //var winWidth = $(window).width();
        var winHeight = $(window).height();
        //var int_NavbarStaticSide = $(".navbar-static-side").width();

        // set initial div height / width
        $('.imagen-trac').css({
            //'width': (winWidth - int_NavbarStaticSide),
            'height': winHeight,
        });

        // make sure div stays full width/height on resize
        $(window).resize(function () {
            //int_NavbarStaticSide = $(".navbar-static-side").width();
            $('.imagen-trac').css({
                //'width': (winWidth - int_NavbarStaticSide),
                'height': winHeight,
            });
        });
        $("#btn_Favorito").click(function () {
            fn_EnviarLike(this);
        });
    });



    function fn_EnviarLike(btnClick) {
        var int_idPublicacion = $(btnClick).data("idpublicacion");
        //Mandamos los datos al webmethod para guardar los datos
        //declaramos el objeto que se le pasara al controlador
        var obj_MeGusta = {
            IntIdPublicacion: int_idPublicacion
        }

        var str_Metodo = "";
        var str_Url = "";
        str_Metodo = "POST";
        str_Url = "@VariableGlobal.StrUrlApi/MeGusta";

        $.ajax({
            url: str_Url,
            data: JSON.stringify(obj_MeGusta),
            type: str_Metodo,
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (obj_Datos) {

                //Se manda el mensaje de exito
                toastr[obj_Datos["StrTipoError"]](obj_Datos["StrMensajeError"]);

            }
        });
    }




</script>