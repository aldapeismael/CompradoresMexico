@using Newtonsoft.Json
@{
    //verificamos si trae parametro para ser Popup o ventana
    int IntPopUp = int.Parse(Request.QueryString["Popup"]?.ToString() ?? "0");

    Page.Title = "Categoria";

    ///////////////////////////////////////////////
    //Codigo para reglas de negocio
    ///////////////////////////////////////////////
    string Strurl = Request.RawUrl;
    bool urlDefault = Strurl.Contains("Default.cshtml");
    List<Accion> objAccion = null;
    String jsonAccionPagina = null;
    String jsonReglasNegocio = null;
    var int_Robot = VariableGlobal.SessionIntBRobot;

    // Comienza petición de acciones para la pagina
    var objAccesoPagina = new PaginaMenuController().Get((int_Robot == 1 ? 2 : 1), Strurl);

    if (IntPopUp == 0)
    {
        Layout = "~/_SiteLayout.cshtml";
        // Comienza petición de acciones para la pagina
        jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
        jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
        objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");

    }
    else
    {
        //So el usuario no es robot, no tiene acceso a la pagina y la pagina no es default
        if (VariableGlobal.SessionIntBRobot != 1 && objAccesoPagina.Content.IntIdPagina == 0 && !urlDefault)
        {
            Response.Redirect("~/Views/Aplicacion/Acceso/SinAcceso.cshtml?Popup=1");
        }
        else
        {
            // Comienza petición de acciones para la pagina
            jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
            jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
            objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");
        }

    }
    
    //Permiso para exportar datos
    var BtnAccionExportar = objAccion.Where(x => x.StrCveAccion == "Exportar").ToList();
}


<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <h2 class="text-center" id="lbl_TituloPagina">Categoria</h2>
        </div>
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12  text-center">
            <form role="form" id="form_Catalogo" action="" method="post" class="form-inline">

                <div class="form-group m-r-sm">
                    <label for="ddl_BActivo">Activo:</label>
                    <select id="ddl_BActivo" class="form-control">
                        <option value="-1">-TODOS-</option>
                        <option value="0">No</option>
                        <option value="1" selected>Sí</option>
                    </select>
                </div>

                @{
                    var BtnAccioBuscar = objAccion.Where(x => x.StrCveAccion == "Buscar").ToList();
                    if (BtnAccioBuscar.Count != 0)
                    {
                        <button id="@BtnAccioBuscar[0].StrObjetoId" name="btn_NuevoOrigenDestino" class="@BtnAccioBuscar[0].StrObjetoClase" type="button" title="@BtnAccioBuscar[0].StrObjetoNombre"><i class="@BtnAccioBuscar[0].StrObjetoIcono"></i></button>
                    }
                }

                @{
                    var BtnAccioNuevo = objAccion.Where(x => x.StrCveAccion == "Nuevo").ToList();
                    if (BtnAccioNuevo.Count != 0)
                    {
                        <button id="@BtnAccioNuevo[0].StrObjetoId" name="btn_NuevoOrigenDestino" class="@BtnAccioNuevo[0].StrObjetoClase" type="button" title="@BtnAccioNuevo[0].StrObjetoNombre"><i class="@BtnAccioNuevo[0].StrObjetoIcono"></i></button>
                    }
                }

            </form>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox contenido-inicial">
        <div class="ibox-content scroll">
            <table id="tbl_Lista" class="table table-striped table-bordered table-hover"></table>
        </div>
    </div>
</div>

<script>

            //declaramos variables globales
            var obj_DataTable;

            $(document).ready(function () {
                $('#btn_Nuevo').click(function () {
                    fn_Nuevo();
                });
                $('#btn_Buscar').click(function () {
                    fn_Buscar();
                });

                //se cargan las funciones iniciales
                fn_CargarDataTable();
            });//termina document ready()

            function fn_Buscar() {
                obj_DataTable.ajax.reload();
            }

            function fn_Nuevo() {
                location.href = "categoriaAbc.cshtml"
            }

            // Funcion para cargar los datos del datatable
            function fn_CargarDataTable() {

                obj_DataTable = $("#tbl_Lista").DataTable({//inicializamos el datatable
                    "language": obj_ClaseDataTable.json_LanguageDataTable,//cargamos la configuracion del lenguaje, configurado en utileria.js
                    "fnServerParams": function (oData) {//aqui van los parametros para el filtrado
                        oData.IntBActivo = $("#ddl_BActivo").val();
                    },
                    "ajax": {//llamamos el metodo datatbale
                        url: "@VariableGlobal.StrUrlApi/CategoriaListado/ObtenerListado/0",
                        type:"POST"
                    },
                    "lengthMenu": obj_ClaseDataTable.array_Paginado,
                    "columns": [//columnas a mostrar en el datatble
                        {
                            "data": "IntIdCategoria",
                            "title": "Id"
                        },
                        {
                            "data": "null",
                            "render": function (data, type, row, meta) {
                                var str_urledit = "categoriaAbc.cshtml?Popup=0&IdCategoria=" + row.IntIdCategoria;
                                return '<a href="' + str_urledit + '" data-id="' + row.IntIdCategoria + '">' + row.StrDescCategoria + '</a>';
                            },
                            "title": "Descripcion"
                        },
                        {
                            "data": "IntBactivo",
                            "title": "Activo",
                            "render": function (data, type, row, meta) {
                                if (data == "1") return "Sí";
                                else return "No";
                            },
                            "width": "20px",
                        }
                    ],
                    "processing": true,//mensaje loadgin de procesamiento en llamada al servidor
                    "serverSide": true,//esto quiere decir que se va aconsumir desde el servidor,
                    @{
                        if(BtnAccionExportar.Count > 0) {
                            <TEXT>
                                buttons: obj_ClaseDataTable.fn_CargaBotones(true),//cargamos los botones que descargan al cliente la informacion, excel, pdf, imagen
                                dom: '<"html5buttons"B>lrftip',
                            </TEXT>
                        }
                    }
                    pageLength: obj_ClaseDataTable.intLongitudPagina,//logitud por defaul
                    "columnDefs": [//se define la botonera de opciones del lado derecho de la tabla,
                        { "visible": true, "targets": [0, 1, 2] }, // <-- Muestra las columnas seleccionas empezando desde 0, en este caso solo mostrara las primeras 5 columnas
                        { "targets": [], "visible": false }//,
                        //{
                        //    title: "Opciones",
                        //    "width": "120px",
                        //    "className": "dt-center",
                        //    "orderable": false,//quita la opcion de ordenamiento de la columna
                        //    "bVisible": true,   // <-- Columna visible
                        //    "targets": 14,      // <-- Con el -1 Cuenta las columnas empezando desde el lado derecho
                        //    "data": null,       // <-- Datos dinámicos de la columna. En este caso se llena con un html en defaultContent
                        //    //"defaultContent": str_opciones, // <-- Contenido de la nueva columna
                        //}
                    ],
                    "searching": false,
                    "initComplete": function (settings, json) {//metodo para que el header flote al momento de scrollear asi abajo
                        obj_ClaseGlobal.fn_AgregarMargenEncabezado(obj_DataTable);
                    },
                    "responsive": true
                });
            }

            //funcion llamada al dar click en la columna de ID para abrir el popup de edicion
            function fn_Editar(par_str_title, par_str_linkedit) {
                if ($.pgwModal('isOpen') == true) { return }
                $.pgwModal({
                    url: par_str_linkedit,
                    loadingContent: '<span style="text-align:center">Loading in progress</span>',
                    closeOnBackgroundClick: false,
                    title: "Editar Categoria - " + par_str_title,
                    maxWidth: '40%'
                });

            };

            // Funcion para cargar los datos del datatable
            function fn_ReCargarDataTable() {
                obj_DataTable.ajax.reload();
            }
</script>
