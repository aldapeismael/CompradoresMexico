@using System.Web.WebPages.Html
@using Newtonsoft.Json;
@{

    Page.Title = "Subcategoria";

    ///////////////////////////////////////////////
    //Codigo para reglas de negocio
    ///////////////////////////////////////////////
    string Strurl = Request.RawUrl;
    bool urlDefault = Strurl.Contains("Default.cshtml");
    List<Accion> objAccion = null;
    String jsonAccionPagina = null;
    String jsonReglasNegocio = null;
    var int_Robot = VariableGlobal.SessionIntBRobot;

    // Comienza petición de acciones para la pagina
    var objAccesoPagina = new PaginaMenuController().Get((int_Robot == 1 ? 2 : 1), Strurl);


    //verificamos si trae parametro para ser Popup o ventana
    bool popUp = bool.Parse(Request.QueryString["Popup"]?.ToString() ?? "false");
    if (!popUp)
    {
        Layout = "~/_SiteLayout.cshtml";
        // Comienza petición de acciones para la pagina
        jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
        jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
        objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");

    }
    else
    {
        //So el usuario no es robot, no tiene acceso a la pagina y la pagina no es default
        if (VariableGlobal.SessionIntBRobot != 1 && objAccesoPagina.Content.IntIdPagina == 0 && !urlDefault)
        {
            Response.Redirect("~/Views/Aplicacion/Acceso/SinAcceso.cshtml?Popup=1");
        }
        else
        {
            // Comienza petición de acciones para la pagina
            jsonAccionPagina = objAccesoPagina.Content.StrJsonPaginaAccion;
            jsonReglasNegocio = objAccesoPagina.Content.StrJsonReglasNegocio;
            objAccion = JsonConvert.DeserializeObject<List<Accion>>(jsonAccionPagina ?? "");
        }

    }

    ///////////////////////////////////////////////
    //Fin Codigo para reglas de negocio
    ///////////////////////////////////////////////

    var objCategoriaDDL = new CategoriaController().ObtenerLista(1, 0);

    //Permiso para exportar datos
    var BtnAccionExportar = objAccion.Where(x => x.StrCveAccion == "Exportar").ToList();
}




<div class="wrapper border-bottom white-bg page-heading">
    <div class="row">
        <div class="col-lg-12">
            <h2 class="text-center" id="lbl_Titulo">Subcategoria</h2>
        </div>
        <div class="col-lg-12  text-center">
            <form role="form" id="form_Tractor" " method="post" class="form-inline">
                <div class="form-group m-r-sm">
                    <label for="ddl_CategoriaBuscar">Categoria:</label>
                    @Html.DropDownList("ddl_CategoriaBuscar", "- TODOS -", objCategoriaDDL.Select(x => new SelectListItem() { Value = x.idCategoria.ToString(), Text = x.descCategoria }), 0, new { @class = "form-control" })
                </div>
                <div class="form-group m-r-sm">
                    <label for="ddl_ActivoBuscar">Activo:</label>
                    <select class="form-control" id="ddl_ActivoBuscar">
                        <option value="2">-TODOS-</option>
                        <option value="1" selected>SI</option>
                        <option value="0">NO</option>
                    </select>
                </div>

                @{
                    var BtnAccioBuscar = objAccion.Where(x => x.StrCveAccion == "Buscar").ToList();
                    if (BtnAccioBuscar.Count != 0)
                    {
                        <button id="@BtnAccioBuscar[0].StrObjetoId" name="btn_NuevoOrigenDestino" class="@BtnAccioBuscar[0].StrObjetoClase" type="button" title="@BtnAccioBuscar[0].StrObjetoNombre"><i class="@BtnAccioBuscar[0].StrObjetoIcono"></i></button>
                    }
                }

                @{
                    var BtnAccioNuevo = objAccion.Where(x => x.StrCveAccion == "Nuevo").ToList();
                    if (BtnAccioNuevo.Count != 0)
                    {
                        <button id="@BtnAccioNuevo[0].StrObjetoId" name="btn_NuevoOrigenDestino" class="@BtnAccioNuevo[0].StrObjetoClase" type="button" title="@BtnAccioNuevo[0].StrObjetoNombre"><i class="@BtnAccioNuevo[0].StrObjetoIcono"></i></button>
                    }
                }

            </form>
        </div>
    </div>
</div>

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox contenido-inicial">
        <div class="ibox-content scroll">
            <table id="tbl_Lista" class="table table-striped table-bordered table-hover"></table>
        </div>
    </div>
</div>

<script type="text/javascript">
    var obj_DataTable;

    $(document).ready(function () {
        $('#btn_Nuevo').click(function () {
            fn_Nuevo();
        });
        $('#btn_Buscar').click(function () {
            fn_Buscar();
        });
        $('body').on('click', '.btn_Eliminar', function () {
            var int_id = $(this).closest("tr").find("td:first a").data("id");
            var str_cve = $(this).closest("tr").find("td:first").text();
            fn_Eliminar(int_id, str_cve);
        });
        fn_CargaTabla();
    });

    function fn_Buscar() {
        obj_DataTable.ajax.reload();
    }

    function fn_Nuevo() {
        location.href = "subcategoriaAbc.cshtml"
    }

    function fn_CargaTabla() {

        obj_DataTable = $("#tbl_Lista").DataTable({//inicializamos el datatable
            "language": obj_ClaseDataTable.json_LanguageDataTable,//cargamos la configuracion del lenguaje, configurado en utileria.js
            "fnServerParams": function (oData) {//aqui van los parametros para el filtrado
                oData.IntIdCategoria = $("#ddl_CategoriaBuscar option:selected").val();
                oData.IntBActivo = $("#ddl_ActivoBuscar option:selected").val();
            },
            "ajax": {//llamamos el metodo datatbale
                url: "@VariableGlobal.StrUrlApi/SubcategoriaListado/ObtenerListado/0",
                type:"POST"
            },
            "lengthMenu": obj_ClaseDataTable.array_Paginado,
            "columns": [//columnas a mostrar en el datatble
                {
                    "data": "IntIdSubcategoria",
                    "title": "Id"
                },
                {
                    "data": "null",
                    "render": function (data, type, row, meta) {
                        var str_urledit = "SubcategoriaAbc.cshtml?Popup=true&IdSubcategoria=" + row.IntIdSubcategoria;
                        return '<a href="#" onclick="javascript: fn_Editar(\'' + row.StrDescSubcategoria + '\',\'' + str_urledit + '\');" data-id=' + row.IntIdSubcategoria + '>' + row.StrDescSubcategoria + '</a>';
                    },
                    "title": "Subcategoria"
                },
              //  { "data": "StrDescSubcategoria", "title": "Subcategoria" },
                { "data": "objCategoria.StrDescCategoria", "title": "Categoria" },
                {
                    "data": "IntBActivo",
                    "title": "Activo",
                    "render": function (data, type, row, meta) {
                        if (data == 1) return "Sí";
                        else return "No";
                    }
                }
            ],
            "processing": true,//mensaje loadgin de procesamiento en llamada al servidor
            "serverSide": true,//esto quiere decir que se va aconsumir desde el servidor,
            @{
                 if(BtnAccionExportar.Count > 0) {
                    <TEXT>
                            buttons: obj_ClaseDataTable.fn_CargaBotones(true),//cargamos los botones que descargan al cliente la informacion, excel, pdf, imagen
                            dom: '<"html5buttons"B>lrftip',
                    </TEXT>
                }
            }
            pageLength: obj_ClaseDataTable.intLongitudPagina,//logitud por defaul
            "columnDefs": [//se define la botonera de opciones del lado derecho de la tabla,
                { "bVisible": true, "aTargets": [0, 1, 2, 3/*, 4, 5*/ ] }, // <-- Muestra las columnas seleccionas empezando desde 0
                { "bVisible": false, "aTargets": ['_all'] }       // <-- Oculta todas las demás columnas
                //{
                //    title: "Opciones",
                //    "width": "120px",
                //    "className": "dt-center",
                //    "orderable": false,//quita la opcion de ordenamiento de la columna
                //    "bVisible": true,   // <-- Columna visible
                //    "targets": 4,      // <-- Con el -1 Cuenta las columnas empezando desde el lado derecho
                //    "data": null,       // <-- Datos dinámicos de la columna. En este caso se llena con un html en defaultContent
                //    "defaultContent": str_Opciones, // <-- Contenido de la nueva columna
                //}
            ],
            "searching": false,
            "initComplete": function (settings, json) {//metodo para que el header flote al momento de scrollear asi abajo
                new $.fn.dataTable.FixedHeader(obj_DataTable,
                    {
                        headerOffset: $('.navbar').outerHeight() + $('.page-heading').outerHeight()
                    }
                );
                $('.table.fixedHeader-floating').css('width', $('#tbl_Lista').width() + "px !important");
            }
        });
    }

    function fn_Editar(par_str_title, par_str_linkedit) {
        if ($.pgwModal('isOpen') == true) { return }
        $.pgwModal({
            url: par_str_linkedit,
            loadingContent: '<span style="text-align:center">Loading in progress</span>',
            closeOnBackgroundClick: false,
            title: "Editar subcategoria - " + par_str_title,
            maxWidth: '40%'
        });
    };

    function fn_Eliminar(par_int_id, par_str_cve) {
        swal({//metodo para el mensage de confirm
            title: "Borrar subcategoria",
            text: "Desea borrar la subcategoria: " + par_str_cve +"?",
            type: "warning",//tipo de mensage =>  opciones: warning, error, info y success
            showCancelButton: true,//mostrar boton de cancelacion
            confirmButtonColor: hex_str_ColorBotonConfirmar,//color de boton de confirmacion
            confirmButtonText: "Sí!",//texto en el boton de confirmacion
            cancelButtonText: "No!",//texto en el boton de cancelacion
            closeOnConfirm: true,//la ventana de cerrara al momento de seleccionar la opcion de confirmacion
            closeOnCancel: true,//la ventana de cerrara al momento de seleccionar la opcion de cancelacion
        },
        function (isConfirm) {
            if (isConfirm) {//si el usuario confirma eliminar
                $.ajax({
                    url: "@VariableGlobal.StrUrlApi/Subcategoria/" + par_int_id//se llama la metodo delete de ApiController
                    , type: "DELETE"
                    , contentType: "application/json; charset=utf-8"
                    , dataType: "json"
                    , success: function (obj_Datos) {
                        toastr[obj_Datos["StrTipoError"]](obj_Datos["StrMensajeError"]);//mostramos la respuesta del ajax
                        var int_PaginaActual = obj_DataTable.page();//obtenemos la pagina que se encuentra el datatable
                        obj_DataTable.ajax.reload();//se recarga el objeto datatable con los datos actualizados
                        obj_DataTable.page(int_PaginaActual).draw("page");//se mantiene en la pagina que estava
                    }
                });
            }
        });
    }
</script>